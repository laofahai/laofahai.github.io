<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>A word spider for English learning</title>
    <url>/posts/31155/</url>
    <content><![CDATA[<p>Hi everyone, I programmed a spider for crawling words from some given website such as Spring Framework Guides, Vue Guides, etc, the artifacts are all the words in the given website and sorted by word frequency, so you can import that to your vocabulary or English Learning APP, like <a href="https://bbdc.cn/">不背单词</a>.</p>
<p>if you’re interested in this, follow this link: <a href="https://github.com/laofahai/wordSpider">wordSpider on Github</a></p>
<span id="more"></span>

<h2 id="Update-20220716"><a href="#Update-20220716" class="headerlink" title="Update 20220716"></a>Update 20220716</h2><p>I added some more words spider here, such as Python Tutorial, PHP Tutorial, Java Tutorial, C++ Tutorial, Golang Tutorial, Flutter, ExtJS, etc. in the meantime the <code>__all.txt</code> updated as well.</p>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li>Start crawling from a listing page, and then get all the sub-pages in the list, this is the structure of most framework or software documents.</li>
<li>Striped most of the invalid characters, punctuations, etc.</li>
<li>Lemmatization via nltk</li>
</ul>
<h2 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h2><p>This spider used this <a href="https://github.com/jhao104/proxy_pool">Proxy pool</a>, <a href="https://beautiful-soup-4.readthedocs.io/en/latest/">BeautifulSoup</a> for parse the HTML and <a href="https://www.nltk.org/">nltk</a> for handle the content in given websites..</p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>I have already created two spiders for Spring Framework Guides and Vue Guides in this project, and the artifacts are in the <code>words</code> directory, the <code>__all.txt</code> is a merged file for all the artifacts.</p>
<p>Follow this link: <a href="https://github.com/laofahai/wordSpider">wordSpider on Github</a></p>
<p>I hope this can help enrich your English vocabulary and practice your pronunciation, especially the programmers like me.</p>
<p>That’s it, so be well.</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
      <tags>
        <tag>English Learning</tag>
        <tag>Python</tag>
        <tag>Spider</tag>
        <tag>nltk</tag>
      </tags>
  </entry>
  <entry>
    <title>Some similar words in English</title>
    <url>/posts/25014/</url>
    <content><![CDATA[<p>As you already know, I’m learning English by myself, and I have some confusion about the progress, so-called “Confusable Words”. So I’m trying to explain their differences and usage scenes to deepen my memory. That’s why this post. </p>
<h1 id="Maybe-Perhaps-Possible-Probable-etc"><a href="#Maybe-Perhaps-Possible-Probable-etc" class="headerlink" title="Maybe, Perhaps, Possible, Probable, etc."></a>Maybe, Perhaps, Possible, Probable, etc.</h1><p>There are many words that can explain 可能 in English, like those in the paragraph title. As I understand them, the rank of the possibility of things happening may be like this: <code>probable &gt; possible &gt;= maybe == perhaps</code>.</p>
<span id="more"></span>

<blockquote><p>As you can see, there are other “Confusable Words” here: <code>possibility and likelihood</code>, we’ll talk about it later.</p>
</blockquote>


<p>The <code>Probable</code> is more affirmative, like: …</p>
<p><code>Maybe</code> and <code>Perhaps</code> is more colloquial, but there’s a big difference between them: <code>as soon as</code>. You can use it like <code>as soon as possible / maybe</code> but can’t instead them by <code>perhaps / probable</code>.</p>
<h1 id="To-be-continued"><a href="#To-be-continued" class="headerlink" title="To be continued."></a>To be continued.</h1><p>That’s too difficult for me, I’ll try it later.</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
      <tags>
        <tag>English Learning</tag>
        <tag>Similar Words</tag>
        <tag>Confusion Words</tag>
      </tags>
  </entry>
  <entry>
    <title>About me</title>
    <url>//about/me/</url>
    <content><![CDATA[<h1 id="Who-am-I"><a href="#Who-am-I" class="headerlink" title="Who am I"></a>Who am I</h1><p>Hi visitor, here’s Ian from China, I’m 34. You could call me 老法海 either - if u know what’s that means, it’s my nickname in Chinese. I’m a <code>programmer</code> who works on the <code>full-stack web development</code> line, and it’s about 14 years I in it since 2008. :)</p>
<span id="more"></span>


<h2 id="Skills-what-I-can-do"><a href="#Skills-what-I-can-do" class="headerlink" title="Skills - what I can do."></a>Skills - what I can do.</h2><p>As you already know, I’ve been doing development work for many years, although there are no great achievements. I have learned some skills from it. I could program with <code>Java</code>, <code>Python</code>, <code>PHP</code>, <code>Javascript</code>, and more, and I can use most of the most popular frameworks of them. I usually program some enterprise applications, especially in the <code>logistic industry</code>.<br>Recently, I have often liked to write programs with the <code>SpringBoot</code> framework of Java, and the <code>ExtJS</code> &#x2F; <code>Vue</code> framework for JavaScript.</p>
<h2 id="Hobbies-what-do-I-like"><a href="#Hobbies-what-do-I-like" class="headerlink" title="Hobbies - what do I like."></a>Hobbies - what do I like.</h2><p>I’m not a very interesting guy, but I still have some hobbies. Yes! that’s true, I have hobbies too! And I have a list below:</p>
<ul>
<li>First of all, if let me choose my favorite, I think it’s programming, I love coding!</li>
<li>I like foods, especially Spicy-Chinese foods, like Hot-Pot, Chinese-Barbecue. Everybody must love them!</li>
<li>I like music, such as Punk &#x2F; Metal &#x2F; Ballad and more. like GreenDay &#x2F; 痛仰 &#x2F; 扭机 &#x2F; LiZhi…</li>
<li>I like Room-Escape games, and I’m a fan of RustyLake, I love Cube Escape!</li>
<li>I like movies and some series, such as S.H.I.E.L.D &#x2F; The Avengers &#x2F; Guardians of the Galaxy &#x2F; Game of Throne &#x2F; Shameless and more… BTW, my name in English - Ian, sounds mostly like my last name in Chinese, and I’m absolutely not a Gallager ha.</li>
</ul>
<p>So if we’re having the same interests, try to contact me, we’ll be very chatty!</p>
<h1 id="Why-this-website"><a href="#Why-this-website" class="headerlink" title="Why this website"></a>Why this website</h1><p>I have also built some of my blog sites before, but they are no longer maintained for some reasons. In recent years, as I’m getting older and older, I think I should leave something more in my life. So I’ll share something about my programming and life here.</p>
<p>And I’m building a new Open-Source project about a quick starter to build enterprise applications via SpringBoot + ExtJS + Vue, if you’re interested in it, maybe we can do it together! </p>
<h1 id="Why-English"><a href="#Why-English" class="headerlink" title="Why English"></a>Why English</h1><p>As you see, the contents of this website are mostly written in English. Yep, I’m learning English now because I’m finding a job that I can work at home. and I think the best way to learn a new language is &#96;Using it anywhere!<br>I’m not that fluent in English now, but I’m learning to be better, so I would appreciate it if you could correct my English mistakes.</p>
<p>BTW, I’m finding language partners, if u want to learn Chinese, I can provide some help on it. so contact me and let’s have a conversation!</p>
<h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>I haven’t used Twitter &#x2F; Facebook&#x2F; What’s App in recent years, so it could find me through the following ways:</p>
<ul>
<li>Wechat - my ID is: <code>ian_laofahai</code>, and my QR code is down here.</li>
<li>Email &#x2F; Skype: <code>335454250@qq.com</code></li>
<li>Tell me if there’s some other APP you’re using and it’s available in China.</li>
</ul>
<img src="/images/wechat-qrcode.png" class="" width="200">

<p>Okay, It’s too difficult for me to write something in English now.</p>
<p>that’s all, hope everything goes well with you! </p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>The build course of Crow Starter - (1</title>
    <url>/posts/59226/</url>
    <content><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>Hello everyone, I’m trying to build a collection of scaffolds to help people build their application quickly, it’s based on <code>SpringBoot</code> for the backend and <code>ExtJS</code> now for the frontend, I’d love to name it <code>Crow Starter</code> because I like Mr.Crow in CubeEscape very much, I hope this post is a good beginning for <code>CrowStarter</code> and maybe it could help the guys who want to use this technology stack to build their application.</p>
<p>This project will be hosted on <a href="https://github.com/laofahai/crow-starter">Github</a> and <a href="https://gitee.com/laofahai/crow-starter">Gitee</a> for Chinese developers, and it’s under the <a href="https://www.gnu.org/licenses/gpl-3.0.en.html">GPL license v3.0</a> because of the ExtJS community edition did.</p>
<p>This scaffold not only contains a SprintBoot starter you can simply include it in your <code>pom.xml</code>, so you need to follow my documents and make it works.</p>
<span id="more"></span>

<h1 id="Scaffolds"><a href="#Scaffolds" class="headerlink" title="Scaffolds"></a>Scaffolds</h1><p>The <code>Crow Starter</code> project will contain many scaffolds like the below:</p>
<h2 id="CrowRest"><a href="#CrowRest" class="headerlink" title="CrowRest"></a>CrowRest</h2><p><a href="https://github.com/laofahai/crow-rest-spring-boot-starter">crow-rest-spring-boot-starter</a> is a quick starter based on SpringBoot to handle common CRUD operations via RESTful API, it’s easily integrated into your project, especially new one, it’s built a new realization via abstract the common operations in web development. so you can:</p>
<ul>
<li>Build a full-functionally module with almost no codes need to write</li>
<li>It’s easy to extend and override the default handlers</li>
<li>Provide service for all data structs from defined entities, so you can build the front-end application based on it in the same programming style of Crow-Rest</li>
<li>and-more…</li>
</ul>
<p>And this crow-rest starter is now providing a 0.0.1 version for release, follow <a href="https://github.com/laofahai/crow-rest-spring-boot-starter">https://github.com/laofahai/crow-rest-spring-boot-starter</a> to getting started.</p>
<h2 id="CrowRBAC"><a href="#CrowRBAC" class="headerlink" title="CrowRBAC"></a>CrowRBAC</h2><p><a href="https://github.com/laofahai/crow-rbac-spring-boot-starter">crow-rbac-spring-boot-starter</a> is an RBAC starter based on <code>CrowRest</code>, but it didn’t finish yet. Features:</p>
<ul>
<li>full-functionally RBAC program with multi-organization</li>
<li>less code to write</li>
<li>auto authorities control based on Roles</li>
<li>support row-level and column-level authorize</li>
<li>and more…</li>
</ul>
<h2 id="CrowExtJS"><a href="#CrowExtJS" class="headerlink" title="CrowExtJS"></a>CrowExtJS</h2><p>The common frontend works with backend projects like based on CrowRest and CrowRBAC, it works well with the general-view what according to the data-struck which backend service auto provided, so you can also write less code for frontend as well. ** not fishing too **</p>
<h2 id="More…"><a href="#More…" class="headerlink" title="More…"></a>More…</h2><p>I will build this project for a long time, to help others create applications more quickly. so maybe the project will have more components in it, like Crow-Vue &#x2F; Crow-Mobile &#x2F; Crow-xxx, and there will be some applications implemented via this collection of scaffolds.</p>
<p>Wish this could help, and hope everything goes well.</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>FullStack</category>
        <category>CrowStarter</category>
      </categories>
      <tags>
        <tag>Crow</tag>
        <tag>ExtJS</tag>
        <tag>SprintBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>2022-12-13 Nothing to tell</title>
    <url>/posts/57444/</url>
    <content><![CDATA[<p>There’s nothing to tell at all expect that I was really busy in the past 6 months which I wasn’t write anything here, and I realize I was losing the desire of express and communicate when I suddenly remember that I had a blog here, and the most terrible thing is that it has been continued for a long time, and I have no idea to make that right, maybe I need some help, or I should do more practice on that. so be it.</p>
<p>bye.</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Daily Life</tag>
      </tags>
  </entry>
  <entry>
    <title>ExtJS getting started</title>
    <url>/posts/64000/</url>
    <content><![CDATA[<h1 id="ExtJS"><a href="#ExtJS" class="headerlink" title="ExtJS"></a>ExtJS</h1><p>As you can see, I will build the front-end application via <code>ExtJS</code>, so first of all is make ExtJS works on your environment. In this post, we trying use <code>Sencha Cmd</code> to build our front-end project.</p>
<p>That is a list for all of you need:</p>
<ul>
<li>A computer with any OS</li>
<li>Java Runtime Environment</li>
<li>An editor you can code on it, like <a href="https://code.visualstudio.com/">VSCode</a>, Eclipse(<a href="https://www.eclipse.org/">https://www.eclipse.org</a><br>), or <a href="https://www.jetbrains.com/">IntelliJ products</a>, and any editor you like.</li>
<li>A ExtJS-CE SDK. <a href="http://localhost:4000/posts/43324/#Related-resources">You could follow this</a></li>
<li><a href="https://www.sencha.com/products/extjs/cmd-download/">Sencha Cmd</a></li>
</ul>
<span id="more"></span>

<h2 id="Sencha-Cmd"><a href="#Sencha-Cmd" class="headerlink" title="Sencha Cmd"></a>Sencha Cmd</h2><p>First step, you need follow the link above to download and install <code>Sencha Cmd</code> on your computer, and make sure the <code>sencha</code> command has been configured in your environment. Use this command to check if it works:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sencha</span></span><br></pre></td></tr></table></figure>

<h2 id="ExtJS-SDK"><a href="#ExtJS-SDK" class="headerlink" title="ExtJS SDK"></a>ExtJS SDK</h2><p>Step 2, download the <code>ExtJS SDK</code> via the link above, unzip it and put it in any place you could find it. after that, follow the command below like:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sencha -sdk /path/to/your/extjs/sdk generate app [-classic/modern] [appName] /path/to/your/app</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<blockquote><ul>
<li>-classic &#x2F; -modern: ExtJS has two toolkits named <code>classic</code> and <code>modern</code>, the classic one is using for desktop application, and the modern one is for modern mobile app.</li>
<li><code>/path/to/your/app</code> also can be given like <code>./yourApp</code> in relative path style.</li>
</ul>
</blockquote>

<p>Now, your workspace may seems like:</p>
<blockquote><p>|app<br>|—-desktop<br>|—-shared<br>|build<br>|generatedFiels<br>|packages<br>|resources<br>|app.js<br>|app.json<br>|build.xml<br>|index.html<br>|index.js<br>|…</p>
</blockquote>

<h2 id="Start-your-first-ExtJS-application"><a href="#Start-your-first-ExtJS-application" class="headerlink" title="Start your first ExtJS application"></a>Start your first ExtJS application</h2><p>if that command works, you will find the generated sources in <code>./yourApp</code> directory, so come on in and start the application like:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> yourApp</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sencha app watch</span></span><br></pre></td></tr></table></figure>

<p>after that, open your browser and go to the URL: <code>http://localhost:1841</code>, you’ll see that your first ExtJS application worked!</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Front-end</category>
      </categories>
      <tags>
        <tag>ExtJS</tag>
        <tag>Front-end</tag>
      </tags>
  </entry>
  <entry>
    <title>Why not ExtJS?</title>
    <url>/posts/43324/</url>
    <content><![CDATA[<p><a href="/posts/22718">中文版本在这里</a></p>
<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>This blog post is a recommendation for ExtJS, it’s the front-end framework I like very much recently. ExtJS is commercial software developed and maintained by Sencha(BTW: The commercial license is a little expensive), but they also provide a community edition under GPL. Although the community edition is usually updated slowly, but you can still use the most of the features.</p>
<p>But since ExtJS 4.x, looks like the developers in China use it very little, and because of that, there are not many articles about ExtJS written in Chinese. I guess maybe the commercial license is more expensive, or they don’t have official API documents in Chinese, and maybe it’s not suitable for the to-C application. The China internet companies do not pay much attention to B-end customers – because they can’t get huge internet traffic and profits like they’re doing in to-C business.</p>
<span id="more"></span>

<h1 id="So-why-I’m-using-ExtJS-not-Angular-x2F-React-x2F-Vue"><a href="#So-why-I’m-using-ExtJS-not-Angular-x2F-React-x2F-Vue" class="headerlink" title="So why I’m using ExtJS, not Angular&#x2F;React&#x2F;Vue"></a>So why I’m using ExtJS, not Angular&#x2F;React&#x2F;Vue</h1><h1 id="The-design"><a href="#The-design" class="headerlink" title="The design"></a>The design</h1><p>At first, there are so many UI-Framework based on Angular&#x2F;React&#x2F;Vue because they didn’t provide official design bound in the framework, for example like AntDesign &#x2F; MaterialUI &#x2F; ElementUI &#x2F; IViewm,  etc, their design concept is seriously homogenized. But in the To-B applications, I don’t think their design language direction is practical, filled with a lot of white space, huge margins, paddings, fancy but useless effects, etc.</p>
<p>BTW, many front-end frameworks are affected by ExtJS.</p>
<h2 id="The-development"><a href="#The-development" class="headerlink" title="The development"></a>The development</h2><p>In so many front-end frameworks, I think Angular(actually I haven’t built any formal application via Angular) and ExtJS is mostly like back-end language&#x2F;framework on development, especially ExtJS is more friendly for back-end engineers. It’s a better way to organize your code in engineering, this can reduce some learning costs and improve the quality of the project.</p>
<h2 id="The-documents"><a href="#The-documents" class="headerlink" title="The documents"></a>The documents</h2><p>ExtJS provides a very friendly and detailed API document, all configurations, properties, methods, and events are so clear. The document’s style and content are highly unified because every component is made by Sencha Team themselves.<br><img src="/images/posts/220506-extjs-doc.jpg" alt="ExtJS API Documents"></p>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><p>And, we need to talk about other frameworks, I have a big prejudice against <code>Angular</code> because of <code>AngularJS</code>, maybe not so many people remember that framework named <code>AngularJS</code>. Yes, it’s <code>AngularJS</code> not <code>Angular</code>. AngularJS can be regarded as the predecessor of Angular, the coolest framework before Vue&#x2F;React. I have built an open-source project named <a href="https://github.com/laofahai/ones">ONES</a> with AngularJS to build its front-end, AngularJS show me a new different front-end world! BUT, Google gave it up, that’s one of the reasons why I don’t maintain it anymore, it broke my heart!</p>
<p>Maybe my level is not good enough on Vue, it didn’t do very well in one of my medium-sized projects built via Vue + ElementUI. As for React, I don’t like the <code>JSX</code> style may be the only reason that I never use it.</p>
<h1 id="Share-a-project-built-via-ExtJS"><a href="#Share-a-project-built-via-ExtJS" class="headerlink" title="Share a project built via ExtJS"></a>Share a project built via ExtJS</h1><p>I developed a typical internal project for my company using ExtJS&#x2F; Electron &#x2F; Vue etc for the front-end. It used ExtJS’s classic toolkit to build desktop applications. I usually like to build some general-view in the projects like this, for example, Form&#x2F;Grid&#x2F;Bill&#x2F;DetailView&#x2F;QueryWindow widgets, etc, this can significantly reduce similar codes, they worked very well because of ExtJS’s Class and Mixins mechanism. You don’t need to write so many codes, just define your Entity &#x2F; VO in the backend, the application will provide DataStructure to use for the frontend and anywhere, it will use different widgets belonging to the different field types, and you can customize them too. I built a code-generator via Python, so you can build a full functional module containing CURD operation and almost write nothing.</p>
<p>Absolutely, there’s a general controller in the backend to handle the REST requests, just define the properties in Entity &#x2F; DTO &#x2F; VO, not even DTO &#x2F; VO if you don’t need it. The JPA will handle the migration of the database, CommonRestHandler will handle CRUD&#x2F;import and export&#x2F;check permission, etc, all common things.</p>
<p>I think it’s the best way when you are programming, it helps to reduce most of the similar codes. A new layer of abstract ha.</p>
<h2 id="Share-some-screenshots"><a href="#Share-some-screenshots" class="headerlink" title="Share some screenshots"></a>Share some screenshots</h2><p><img src="/images/posts/220506-jones.jpg" alt="内部某项目"><br><img src="/images/posts/220506-jones-2.png" alt="内部某项目"></p>
<h2 id="Share-some-codes"><a href="#Share-some-codes" class="headerlink" title="Share some codes"></a>Share some codes</h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        This the one of my general-view for data grid.
    </div>
    <div class='spoiler-content'>
        <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Ext</span>.<span class="title function_">define</span>(<span class="string">&#x27;yas.lib.base.Grid&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">requires</span>: [</span><br><span class="line">    <span class="string">&quot;Ext.grid.Panel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Ext.grid.filters.Filters&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">extend</span>: <span class="string">&quot;Ext.grid.Panel&quot;</span>,</span><br><span class="line">    <span class="attr">autoDestroy</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">columnLines</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// enableLocking: true,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认自动加载数据</span></span><br><span class="line">    <span class="attr">autoLoad</span>: <span class="literal">true</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">border</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">plugins</span>: &#123;</span><br><span class="line">        <span class="attr">gridfilters</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">layout</span>: <span class="string">&quot;fit&quot;</span>,</span><br><span class="line">    <span class="attr">scrollable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">deferRowRender</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">initQueryParams</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">xtype</span>: <span class="string">&quot;basegrid&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">features</span>: [&#123;</span><br><span class="line">        <span class="attr">ftype</span>: <span class="string">&#x27;summary&#x27;</span>,</span><br><span class="line">        <span class="attr">dock</span>: <span class="string">&quot;bottom&quot;</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">ftype</span>: <span class="string">&#x27;grouping&#x27;</span>,</span><br><span class="line">        <span class="attr">collapsible</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">groupHeaderTpl</span>: [<span class="string">&#x27;&lt;input class=&quot;group-checkbox&quot; type=&quot;checkbox&quot; /&gt; &#123;columnName&#125;: &#123;name&#125;(&#123;children.length&#125;)&#x27;</span>],</span><br><span class="line">        <span class="attr">enableNoGroups</span>: <span class="literal">true</span></span><br><span class="line">    &#125;],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// enableLocking: true,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按钮类型</span></span><br><span class="line">    <span class="attr">actionTypes</span>: [</span><br><span class="line">        <span class="string">&quot;add&quot;</span>, <span class="string">&quot;edit&quot;</span>, <span class="string">&quot;delete&quot;</span>, <span class="string">&quot;-&quot;</span>,</span><br><span class="line">        <span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;export&quot;</span>, <span class="string">&quot;import&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-&quot;</span>, <span class="string">&quot;trash&quot;</span>, <span class="string">&quot;restore&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">additionalActionTypes</span>: [</span><br><span class="line">        <span class="string">&quot;-&gt;&quot;</span>, <span class="string">&quot;query&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">actionConfigs</span>: &#123;&#125;,</span><br><span class="line">    </span><br><span class="line">    scroll :<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">viewConfig</span>:&#123;</span><br><span class="line">        <span class="attr">stripeRows</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">enableTextSelection</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">scrollable</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">selModel</span>: &#123;</span><br><span class="line">        <span class="attr">injectCheckbox</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&quot;SIMPLE&quot;</span>,</span><br><span class="line">        <span class="attr">checkOnly</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allowDeselect</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;checkboxmodel&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">bbar</span>: &#123;</span><br><span class="line">        <span class="attr">xtype</span>: <span class="string">&#x27;pagingtoolbar&#x27;</span>,</span><br><span class="line">        <span class="attr">displayInfo</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">contextMenu</span>: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">listeners</span>: &#123;</span><br><span class="line">        <span class="attr">selectionchange</span>: <span class="keyword">function</span>(<span class="params">selectionModel, items</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> toolbar = <span class="variable language_">this</span>.<span class="title function_">down</span>(<span class="string">&quot;toolbar&quot;</span>),</span><br><span class="line">                selectedLength = items.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">if</span>(!toolbar) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> toolbar.<span class="property">items</span>.<span class="property">items</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> toolbarBtn = toolbar.<span class="property">items</span>.<span class="property">items</span>[i];</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 菜单</span></span><br><span class="line">                <span class="keyword">if</span>(toolbarBtn.<span class="property">menu</span> &amp;&amp; toolbarBtn.<span class="property">menu</span>.<span class="property">items</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> j <span class="keyword">in</span> toolbarBtn.<span class="property">menu</span>.<span class="property">items</span>.<span class="property">items</span>) &#123;</span><br><span class="line">                        <span class="keyword">let</span> menuBtn = toolbarBtn.<span class="property">menu</span>.<span class="property">items</span>.<span class="property">items</span>[j];</span><br><span class="line">                        <span class="keyword">if</span>(!menuBtn.<span class="property">multi</span>) &#123;</span><br><span class="line">                            selectedLength !== <span class="number">1</span> ? menuBtn.<span class="title function_">disable</span>() : menuBtn.<span class="title function_">enable</span>();</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            selectedLength &lt;= <span class="number">0</span> ? menuBtn.<span class="title function_">disable</span>() : menuBtn.<span class="title function_">enable</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(toolbarBtn.<span class="property">multi</span> === <span class="literal">undefined</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(!toolbarBtn.<span class="property">multi</span>) &#123;</span><br><span class="line">                    selectedLength !== <span class="number">1</span> ? toolbarBtn.<span class="title function_">disable</span>() : toolbarBtn.<span class="title function_">enable</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    selectedLength &lt;= <span class="number">0</span> ? toolbarBtn.<span class="title function_">disable</span>() : toolbarBtn.<span class="title function_">enable</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> restoreBtn = toolbar.<span class="title function_">getComponent</span>(<span class="string">&quot;restoreButton&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(restoreBtn) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">trashStation</span> &amp;&amp; selectedLength &gt; <span class="number">0</span> ? restoreBtn.<span class="title function_">enable</span>() : restoreBtn.<span class="title function_">disable</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 列变化时 保存到本地</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> <span class="variable">ct</span></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> <span class="variable">column</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="attr">columnmove</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">columnresize</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">columnshow</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">columnhide</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="attr">celldblclick</span>: <span class="keyword">function</span>(<span class="params"> table, td, cellIndex, record, tr, rowIndex, e, eOpts</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> fieldName = table.<span class="title function_">getHeaderAtIndex</span>(cellIndex).<span class="property">dataIndex</span>;</span><br><span class="line">                yas.<span class="property">lib</span>.<span class="property">Plugin</span>.<span class="title function_">execute</span>(<span class="string">&quot;lib.base.grid.cellDblClick&quot;</span>, fieldName, record, table, rowIndex, e, <span class="variable language_">this</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span>(e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">initComponent</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> me = <span class="variable language_">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">apiAlias</span>) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 当前使用的API Class</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@type</span> &#123;<span class="type">Object</span>&#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">apiCls</span> = <span class="variable language_">this</span>.<span class="property">apiCls</span> || yas.<span class="property">lib</span>.<span class="property">helper</span>.<span class="property">Api</span>.<span class="title function_">getApi</span>(<span class="variable language_">this</span>.<span class="property">apiAlias</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">apiCls</span>.<span class="property">component</span> = <span class="variable language_">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 顶部工具栏</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@type</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">tbar</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">tbar</span> = <span class="variable language_">this</span>.<span class="property">tbar</span> || yas.<span class="property">lib</span>.<span class="property">cv</span>.<span class="property">GridActions</span>.<span class="title function_">getActions</span>(<span class="variable language_">this</span>.<span class="property">apiCls</span>, <span class="variable language_">this</span>.<span class="property">definedTbar</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 当前使用的 Store</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@type</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">store</span> = <span class="variable language_">this</span>.<span class="property">store</span> || <span class="title class_">Ext</span>.<span class="title function_">create</span>(</span><br><span class="line">            yas.<span class="property">lib</span>.<span class="property">helper</span>.<span class="property">Helper</span>.<span class="title function_">aliasToFullName</span>(<span class="variable language_">this</span>.<span class="property">apiAlias</span>, <span class="string">&quot;store&quot;</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">store</span>.<span class="property">component</span> = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="comment">// this.store = this.store || Ext.StoreManager.lookup(this.apiAlias);</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 未定义 columns 时尝试自动定义</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">columns</span> = <span class="variable language_">this</span>.<span class="property">columns</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">columns</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="variable language_">this</span>.<span class="property">columns</span> : <span class="variable language_">this</span>.<span class="property">apiCls</span>.<span class="title function_">getColumnsForGrid</span>(&#123;</span><br><span class="line">            <span class="attr">grid</span>: <span class="variable language_">this</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 原始查询条件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">initQueryParams</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">getStore</span>().<span class="title function_">setQueryParams</span>(<span class="variable language_">this</span>.<span class="property">initQueryParams</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自动高度</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// this.autoHeight &amp;&amp; this.setHeight(Ext.getCmp(&quot;app_center&quot;).getHeight());</span></span><br><span class="line">        <span class="comment">// this.autoHeight &amp;&amp; this.fitContainer();</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自动载入初始数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">autoLoad</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">getStore</span>().<span class="title function_">load</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callParent</span>(<span class="variable language_">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="variable language_">this</span>.<span class="property">afterInitComponent</span> === <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">afterInitComponent</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 布局保存到本地</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">saveLayout</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> columns = <span class="variable language_">this</span>.<span class="title function_">getColumns</span>(),</span><br><span class="line">            cleared = &#123;</span><br><span class="line">                <span class="attr">fieldsList</span>: [],</span><br><span class="line">                <span class="attr">fieldConfig</span>: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            ignoreXtype = [<span class="string">&quot;checkcolumn&quot;</span>, <span class="string">&quot;rownumberer&quot;</span>],</span><br><span class="line">            gridName = <span class="variable language_">this</span>.<span class="property">gridName</span> || <span class="variable language_">this</span>.<span class="property">apiAlias</span>;</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Ext</span>.<span class="property">Array</span>.<span class="title function_">each</span>(columns, <span class="keyword">function</span>(<span class="params">column</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ignoreXtype.<span class="title function_">indexOf</span>(column.<span class="property">xtype</span>) &gt;= <span class="number">0</span> || !column.<span class="property">columnName</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cleared.<span class="property">fieldsList</span>.<span class="title function_">push</span>(column.<span class="property">columnName</span>);</span><br><span class="line">            cleared.<span class="property">fieldConfig</span>[column.<span class="property">columnName</span>] = &#123;</span><br><span class="line">                <span class="attr">width</span>: column.<span class="property">width</span>,</span><br><span class="line">                <span class="attr">hidden</span>: column.<span class="property">hidden</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        yas.<span class="property">lib</span>.<span class="property">cv</span>.<span class="property">SavedLayouts</span>.<span class="title function_">save</span>(gridName, cleared);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

    </div>
</div>

<h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>if you’re programming an application for internal use, an open-source project, or your company can handle the commercial license costs, and you focus on practicability not fancy, I think ExtJS is a good choice, especially for a full-stack web developer, you can try it. and if you have any questions, you’re so welcome to talk to me!</p>
<p>Still that saying:</p>
<blockquote><p>All the languages, frameworks, and design patterns are tools to support your business, so choose the most suitable one.</p>
</blockquote>

<h1 id="Related-resources"><a href="#Related-resources" class="headerlink" title="Related resources"></a>Related resources</h1><ul>
<li>ExtJS is currently upgraded to the 7.x version, the community version now provides npm package too, it’s more simple now.</li>
<li>if you need the GPL version of ExtJS, please follow this to <a href="https://www.sencha.com/products/extjs/communityedition/">get community edition of ExtJS</a> or <a href="https://github.com/tremez/extjs-gpl">unofficial version from GitHub</a> </li>
<li>if you’re using ExtJS 6.x-CE, maybe try <a href="https://www.npmjs.com/package/extjs-gpl">npm i extjs-gpl</a></li>
<li>and here are the <a href="https://docs.sencha.com/extjs/7.0.0-CE/index.html">ExtJS official documents</a>, although you can get an offline version too.</li>
</ul>
<p>That’s it, hope everything goes well!</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Front-end</category>
      </categories>
      <tags>
        <tag>ExtJS</tag>
        <tag>Front-end</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么不用 ExtJS 呢？</title>
    <url>/posts/22718/</url>
    <content><![CDATA[<p><a href="/posts/43324">English version here</a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是一篇推荐 ExtJS 框架的文章，ExtJS 是我最近来非常喜欢的前端框架，它是由 Sencha 公司开发维护的商业软件，授权比较贵，但是它同样提供了基于 GPL 协议的社区版。虽然通常社区版更新的比较慢，但是你可以使用它的绝大部分功能。</p>
<p>但是自 ExtJS 4.x 版本之后，国内的开发者使用的非常之少，相对的中文资料也非常少。究其原因据我猜测可能是因为授权问题、中文文档差一点、以及不太适合 to-C 应用。而 B 端客户是中国互联网公司不太重视的地方 —— 可能并没有像做 to-C 应用一样有高昂的利润。</p>
<span id="more"></span>
<h1 id="为什么我要使用-ExtJS-而不是-Angular-x2F-Vue-x2F-React"><a href="#为什么我要使用-ExtJS-而不是-Angular-x2F-Vue-x2F-React" class="headerlink" title="为什么我要使用 ExtJS 而不是 Angular &#x2F; Vue &#x2F; React"></a>为什么我要使用 ExtJS 而不是 Angular &#x2F; Vue &#x2F; React</h1><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>首先，因为 Angular &#x2F; Vue &#x2F; React 本身并不提供设计，所以使用它们开发的各种UI框架层出不穷，像是 Ant Design &#x2F; Material - UI &#x2F; ElementUI &#x2F; IView 等等，设计理念越来越趋向同质化。但在 to-B 的应用中，我认为当前的设计语言方向并不太实用，充斥着大量的留白空间、硕大的内外边距、花哨但无用的特效等，让我在做 B 端应用的时候不敢苟同。</p>
<p>反观 ExtJS 一直是非常统一而且不断在进步，当前版本提供了 <code>classic</code> 和 <code>mordern</code> 两个 toolkit，分别适用于桌面环境和移动环境，提供了几乎所有你能用到的 UI 组件，而且设计高度统一， classic toolkit 里面的 <code>theme-classic</code> 主题是永恒的经典，十几年过去仍不显过时 —— 我认为这是所有 ExtJS 官方主题里面为数不多的还算好看的主题了。</p>
<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>诸多前端框架中，我认为 Angular (目前我还没有用它开发过任何实际上线的应用) 和 ExtJS 是最接近后端开发思想的，尤其是 ExtJS，后端人员理解起来相对其他的框架要好一点，可以以更加工程化的代码组织方式来进行开发，这对整个项目的结构是个非常好的事情。在前端越来越碎片化的今天，这可以有效的降低一些学习成本，提高项目的整体质量。 </p>
<p>ExtJS 的提供了各种各样的组件、工具包，而且可以非常方便的与扩展和无侵入重写，你几乎不需要使用其他的第三方库就可以工作的非常好，不用担心各种版本问题、冲突问题等等。</p>
<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>ExtJS 的 API 文档非常之详尽，对开发者非常友好，所有的配置、属性、方法、事件等等一目了然。 而且由于所有用到的组件出自自家，文档风格和内容也高度统一。<br><img src="/images/posts/220506-extjs-doc.jpg" alt="ExtJS 的文档"></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>然后就该说一下其他框架了，因为 AngularJS 我对 Angular 抱有非常大的成见，可能很多人都不记得这个框架了，它实际可以算是 Angular 的前身，在 Vue &#x2F; React 还没出现之前它是最酷的前端框架，我曾经开发过一个开源项目 <a href="https://github.com/laofahai/ones">ONES</a> ，它的前端就是基于 AngularJS 开发的，它让我见识了一个完全不一样的前端世界。但是后来 Google 放弃了它，这也是我不再维护这个项目的原因之一，它伤透了我的心。</p>
<p>可能是因为我的技术水平问题，在一个 Vue 2 + ElementUI 的前端中型项目中的表现并不是非常好。而对于React，我感觉唯一的原因就是我不太喜欢an <code>JSX</code> 的写法。</p>
<p>另外目前为止我还没有使用 Angular &#x2F; React &#x2F; Vue 做过非常复杂的应用，这可能也是我对他们的理解并没有那么深刻的原因。</p>
<h1 id="用-ExtJS-做过的项目"><a href="#用-ExtJS-做过的项目" class="headerlink" title="用 ExtJS 做过的项目"></a>用 ExtJS 做过的项目</h1><p>这是一个比较典型的内部应用，前端涉及到了 ExtJS &#x2F; Electron &#x2F; Vue 等等很多技术，使用的是 ExtJS classic toolkit。通常我在做这种项目的时候喜欢做一些通用的视图，比如 Form &#x2F; Grid &#x2F; Bill &#x2F; DetailView &#x2F; QueryWindow 等等，这样可以有效的减少大量的同质开发工作，而且得益于 ExtJS 的类机制和Mixins机制，他们工作的非常好。 前端代码并不需要写很多，只需要后端定义好 Entity &#x2F; Vo 就可以自动生成相应的 DataStructure 供前端使用，前端会根据不同的字段类型使用不同的控件，而且前端也可以进行相应的自定义调整。使用 Python 做了代码生成器，这样几乎无需写任何代码就可以完成一个模块基本的 CRUD 操作。</p>
<p>当然后端也有相应的通用控制器来进行请求的处理，通常只需要定义 Entity 和 Vo 的类成员变量就可以了，甚至如果你不需要 Vo 都可以不定义，JPA 会处理数据库结构同步，CommonRestHandler 会负责CRUD &#x2F; 导入 &#x2F; 导出 &#x2F; 处理权限校验等等工作。</p>
<p>我认为这是一个非常好的方法，这有助于减少大量的同质代码，进行了新一层的抽象。</p>
<h2 id="截图分享"><a href="#截图分享" class="headerlink" title="截图分享"></a>截图分享</h2><p><img src="/images/posts/220506-jones.jpg" alt="内部某项目"><br><img src="/images/posts/220506-jones-2.png" alt="内部某项目"></p>
<h2 id="一些代码"><a href="#一些代码" class="headerlink" title="一些代码"></a>一些代码</h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        一个处理 Data Grid 的通用视图的代码
    </div>
    <div class='spoiler-content'>
        <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Ext</span>.<span class="title function_">define</span>(<span class="string">&#x27;yas.lib.base.Grid&#x27;</span>, &#123;</span><br><span class="line"><span class="attr">requires</span>: [</span><br><span class="line"><span class="string">&quot;Ext.grid.Panel&quot;</span>,</span><br><span class="line"><span class="string">&quot;Ext.grid.filters.Filters&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">extend</span>: <span class="string">&quot;Ext.grid.Panel&quot;</span>,</span><br><span class="line"><span class="attr">autoDestroy</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">columnLines</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// enableLocking: true,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认自动加载数据</span></span><br><span class="line">    <span class="attr">autoLoad</span>: <span class="literal">true</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">border</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">plugins</span>: &#123;</span><br><span class="line">        <span class="attr">gridfilters</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">layout</span>: <span class="string">&quot;fit&quot;</span>,</span><br><span class="line">    <span class="attr">scrollable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">deferRowRender</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">initQueryParams</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">xtype</span>: <span class="string">&quot;basegrid&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">features</span>: [&#123;</span><br><span class="line">        <span class="attr">ftype</span>: <span class="string">&#x27;summary&#x27;</span>,</span><br><span class="line">        <span class="attr">dock</span>: <span class="string">&quot;bottom&quot;</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">ftype</span>: <span class="string">&#x27;grouping&#x27;</span>,</span><br><span class="line">        <span class="attr">collapsible</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">groupHeaderTpl</span>: [<span class="string">&#x27;&lt;input class=&quot;group-checkbox&quot; type=&quot;checkbox&quot; /&gt; &#123;columnName&#125;: &#123;name&#125;(&#123;children.length&#125;)&#x27;</span>],</span><br><span class="line">        <span class="attr">enableNoGroups</span>: <span class="literal">true</span></span><br><span class="line">    &#125;],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// enableLocking: true,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按钮类型</span></span><br><span class="line">    <span class="attr">actionTypes</span>: [</span><br><span class="line">        <span class="string">&quot;add&quot;</span>, <span class="string">&quot;edit&quot;</span>, <span class="string">&quot;delete&quot;</span>, <span class="string">&quot;-&quot;</span>,</span><br><span class="line">        <span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;export&quot;</span>, <span class="string">&quot;import&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-&quot;</span>, <span class="string">&quot;trash&quot;</span>, <span class="string">&quot;restore&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">additionalActionTypes</span>: [</span><br><span class="line">        <span class="string">&quot;-&gt;&quot;</span>, <span class="string">&quot;query&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">actionConfigs</span>: &#123;&#125;,</span><br><span class="line">    </span><br><span class="line">    scroll :<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">viewConfig</span>:&#123;</span><br><span class="line">        <span class="attr">stripeRows</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">enableTextSelection</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">scrollable</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">selModel</span>: &#123;</span><br><span class="line">        <span class="attr">injectCheckbox</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&quot;SIMPLE&quot;</span>,</span><br><span class="line">        <span class="attr">checkOnly</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allowDeselect</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;checkboxmodel&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">bbar</span>: &#123;</span><br><span class="line">        <span class="attr">xtype</span>: <span class="string">&#x27;pagingtoolbar&#x27;</span>,</span><br><span class="line">        <span class="attr">displayInfo</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">contextMenu</span>: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">listeners</span>: &#123;</span><br><span class="line">        <span class="attr">selectionchange</span>: <span class="keyword">function</span>(<span class="params">selectionModel, items</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> toolbar = <span class="variable language_">this</span>.<span class="title function_">down</span>(<span class="string">&quot;toolbar&quot;</span>),</span><br><span class="line">                selectedLength = items.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">if</span>(!toolbar) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> toolbar.<span class="property">items</span>.<span class="property">items</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> toolbarBtn = toolbar.<span class="property">items</span>.<span class="property">items</span>[i];</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 菜单</span></span><br><span class="line">                <span class="keyword">if</span>(toolbarBtn.<span class="property">menu</span> &amp;&amp; toolbarBtn.<span class="property">menu</span>.<span class="property">items</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> j <span class="keyword">in</span> toolbarBtn.<span class="property">menu</span>.<span class="property">items</span>.<span class="property">items</span>) &#123;</span><br><span class="line">                        <span class="keyword">let</span> menuBtn = toolbarBtn.<span class="property">menu</span>.<span class="property">items</span>.<span class="property">items</span>[j];</span><br><span class="line">                        <span class="keyword">if</span>(!menuBtn.<span class="property">multi</span>) &#123;</span><br><span class="line">                            selectedLength !== <span class="number">1</span> ? menuBtn.<span class="title function_">disable</span>() : menuBtn.<span class="title function_">enable</span>();</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            selectedLength &lt;= <span class="number">0</span> ? menuBtn.<span class="title function_">disable</span>() : menuBtn.<span class="title function_">enable</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(toolbarBtn.<span class="property">multi</span> === <span class="literal">undefined</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(!toolbarBtn.<span class="property">multi</span>) &#123;</span><br><span class="line">                    selectedLength !== <span class="number">1</span> ? toolbarBtn.<span class="title function_">disable</span>() : toolbarBtn.<span class="title function_">enable</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    selectedLength &lt;= <span class="number">0</span> ? toolbarBtn.<span class="title function_">disable</span>() : toolbarBtn.<span class="title function_">enable</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> restoreBtn = toolbar.<span class="title function_">getComponent</span>(<span class="string">&quot;restoreButton&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(restoreBtn) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">trashStation</span> &amp;&amp; selectedLength &gt; <span class="number">0</span> ? restoreBtn.<span class="title function_">enable</span>() : restoreBtn.<span class="title function_">disable</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 列变化时 保存到本地</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> <span class="variable">ct</span></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> <span class="variable">column</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="attr">columnmove</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">columnresize</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">columnshow</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">columnhide</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveLayout</span>();</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="attr">celldblclick</span>: <span class="keyword">function</span>(<span class="params"> table, td, cellIndex, record, tr, rowIndex, e, eOpts</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> fieldName = table.<span class="title function_">getHeaderAtIndex</span>(cellIndex).<span class="property">dataIndex</span>;</span><br><span class="line">                yas.<span class="property">lib</span>.<span class="property">Plugin</span>.<span class="title function_">execute</span>(<span class="string">&quot;lib.base.grid.cellDblClick&quot;</span>, fieldName, record, table, rowIndex, e, <span class="variable language_">this</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span>(e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">initComponent</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> me = <span class="variable language_">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">apiAlias</span>) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 当前使用的API Class</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@type</span> &#123;<span class="type">Object</span>&#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">apiCls</span> = <span class="variable language_">this</span>.<span class="property">apiCls</span> || yas.<span class="property">lib</span>.<span class="property">helper</span>.<span class="property">Api</span>.<span class="title function_">getApi</span>(<span class="variable language_">this</span>.<span class="property">apiAlias</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">apiCls</span>.<span class="property">component</span> = <span class="variable language_">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 顶部工具栏</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@type</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">tbar</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">tbar</span> = <span class="variable language_">this</span>.<span class="property">tbar</span> || yas.<span class="property">lib</span>.<span class="property">cv</span>.<span class="property">GridActions</span>.<span class="title function_">getActions</span>(<span class="variable language_">this</span>.<span class="property">apiCls</span>, <span class="variable language_">this</span>.<span class="property">definedTbar</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 当前使用的 Store</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@type</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">store</span> = <span class="variable language_">this</span>.<span class="property">store</span> || <span class="title class_">Ext</span>.<span class="title function_">create</span>(</span><br><span class="line">            yas.<span class="property">lib</span>.<span class="property">helper</span>.<span class="property">Helper</span>.<span class="title function_">aliasToFullName</span>(<span class="variable language_">this</span>.<span class="property">apiAlias</span>, <span class="string">&quot;store&quot;</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">store</span>.<span class="property">component</span> = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="comment">// this.store = this.store || Ext.StoreManager.lookup(this.apiAlias);</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 未定义 columns 时尝试自动定义</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">columns</span> = <span class="variable language_">this</span>.<span class="property">columns</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">columns</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="variable language_">this</span>.<span class="property">columns</span> : <span class="variable language_">this</span>.<span class="property">apiCls</span>.<span class="title function_">getColumnsForGrid</span>(&#123;</span><br><span class="line">            <span class="attr">grid</span>: <span class="variable language_">this</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 原始查询条件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">initQueryParams</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">getStore</span>().<span class="title function_">setQueryParams</span>(<span class="variable language_">this</span>.<span class="property">initQueryParams</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自动高度</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// this.autoHeight &amp;&amp; this.setHeight(Ext.getCmp(&quot;app_center&quot;).getHeight());</span></span><br><span class="line">        <span class="comment">// this.autoHeight &amp;&amp; this.fitContainer();</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自动载入初始数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">autoLoad</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">getStore</span>().<span class="title function_">load</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callParent</span>(<span class="variable language_">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="variable language_">this</span>.<span class="property">afterInitComponent</span> === <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">afterInitComponent</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 布局保存到本地</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">saveLayout</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> columns = <span class="variable language_">this</span>.<span class="title function_">getColumns</span>(),</span><br><span class="line">            cleared = &#123;</span><br><span class="line">                <span class="attr">fieldsList</span>: [],</span><br><span class="line">                <span class="attr">fieldConfig</span>: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            ignoreXtype = [<span class="string">&quot;checkcolumn&quot;</span>, <span class="string">&quot;rownumberer&quot;</span>],</span><br><span class="line">            gridName = <span class="variable language_">this</span>.<span class="property">gridName</span> || <span class="variable language_">this</span>.<span class="property">apiAlias</span>;</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Ext</span>.<span class="property">Array</span>.<span class="title function_">each</span>(columns, <span class="keyword">function</span>(<span class="params">column</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ignoreXtype.<span class="title function_">indexOf</span>(column.<span class="property">xtype</span>) &gt;= <span class="number">0</span> || !column.<span class="property">columnName</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cleared.<span class="property">fieldsList</span>.<span class="title function_">push</span>(column.<span class="property">columnName</span>);</span><br><span class="line">            cleared.<span class="property">fieldConfig</span>[column.<span class="property">columnName</span>] = &#123;</span><br><span class="line">                <span class="attr">width</span>: column.<span class="property">width</span>,</span><br><span class="line">                <span class="attr">hidden</span>: column.<span class="property">hidden</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        yas.<span class="property">lib</span>.<span class="property">cv</span>.<span class="property">SavedLayouts</span>.<span class="title function_">save</span>(gridName, cleared);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
    </div>
</div>

<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>如果你在开发企业内部应用 &#x2F; 开源项目 &#x2F; 或者企业有能力负担相应的授权成本，而且你的应用更偏重于实用性而不是更华丽，那么我认为 ExtJS 是一个非常好的选择，尤其是作为全栈 Web 开发者，你可以尝试去使用它，而且如果你有任何问题，也随时欢迎和我聊聊！</p>
<p>还是那句老话：</p>
<blockquote><p>所谓语言 &#x2F; 框架 &#x2F; 设计模式等都是实现的业务工具和手段，所以选择最适合的那个</p>
</blockquote>

<h1 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h1><ul>
<li>目前 ExtJS 已经更新到了 7.x， 社区版也已经提供了 npm 方式进行安装，这越来越现代化了。</li>
<li>如果你需要 ExtJS 的 GPL 版本，请 <a href="https://www.sencha.com/products/extjs/communityedition/">申请 Extjs 社区版</a> 或通过 <a href="https://github.com/tremez/extjs-gpl">非官方的 Github 仓库</a></li>
<li>如果你可以使用 ExtJS 6.x-CE 版本，可以使用 <a href="https://www.npmjs.com/package/extjs-gpl">npm i extjs-gpl</a></li>
<li>文档在这里：<a href="https://docs.sencha.com/extjs/7.0.0-CE/index.html">ExtJS 官方文档</a> ，当然你可以下载离线版本</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Front-end</category>
      </categories>
      <tags>
        <tag>ExtJS</tag>
        <tag>Front-end</tag>
      </tags>
  </entry>
</search>
